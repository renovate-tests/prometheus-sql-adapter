include:
  - local: /.gitlab/tools.yml

stages:
  - status-pre
  - test
  - image
  - status-post

# image jobs
build-image-postgres-10-branch:
  extends:
    - .build-docker
  stage: image
  except:
    - tags
  script:
    - make build-image
  variables:
    IMAGE_ARGS: --push
    IMAGE_ARCH: postgres-10

build-image-postgres-10-tag:
  extends:
    - .build-docker
  stage: image
  only:
    - tags
  script:
    - make build-image
  variables:
    IMAGE_ARGS: --push
    IMAGE_ARCH: postgres-10

build-image-postgres-11-branch:
  extends:
    - .build-docker
  stage: image
  except:
    - tags
  script:
    - make build-image
  variables:
    IMAGE_ARGS: --push
    IMAGE_ARCH: postgres-11

build-image-postgres-11-tag:
  extends:
    - .build-docker
  stage: image
  only:
    - tags
  script:
    - make build-image
  variables:
    IMAGE_ARGS: --push
    IMAGE_ARCH: postgres-11

# test jobs
test-go:
  extends:
    - .build-go
  stage: test
  script:
    - mkdir out
    - go test -coverprofile=out/cover.out ./...
    - go tool cover -html=out/cover.out -o=out/cover.html
    - go tool cover -func=out/cover.out
  artifacts:
    expire_in: 1 week
    paths:
      - out/cover.*

.test-schema:
  stage: test
  script:
    - export PGHOST=localhost
    - export PGUSER=postgres
    - export PGPASSWORD=test_root
    - export PGDATABASE=test_schema
    - psql -c "SELECT 'ok';"
    - ./scripts/schema-create.sh
    - psql -c "CREATE EXTENSION pgtap;"
    - pg_prove test/*.sql
  variables:
    POSTGRES_DB: test_schema
    POSTGRES_PASSWORD: test_root

test-schema-postgres-10:
  extends:
    - .test-pgtap-10
    - .test-schema
  variables:
    PG_MAJOR: "10"

test-schema-postgres-11:
  extends:
    - .test-pgtap-11
    - .test-schema
  variables:
    PG_MAJOR: "11"

# commit status
codecov-success:
  stage: status-post
  extends:
    - .build-codecov

  when: on_success
  dependencies:
    - build-node
  script:
    - make upload-codecov

# github jobs
github-pending:
  stage: status-pre
  extends:
    - .build-curl
  script:
    - ./scripts/github-status.sh pending

github-failure:
  stage: status-post
  extends:
    - .build-curl
  when: on_failure
  script:
    - ./scripts/github-status.sh failure

github-success:
  stage: status-post
  extends:
    - .build-curl
  when: on_success
  script:
    - ./scripts/github-status.sh success
